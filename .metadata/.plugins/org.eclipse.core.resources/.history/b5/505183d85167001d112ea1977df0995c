
public class maze {

	static int N = 8;
	
	static int [][] maze = {
			{0,0,0,0,0,0,0,1},		
			{0,1,1,0,1,1,0,1},
			{0,0,0,1,0,0,0,1},
			{0,1,0,0,1,1,0,0},
			{0,1,1,1,0,0,1,1},
			{0,1,0,0,0,1,0,1},
			{0,0,0,1,0,0,0,1},
			{0,1,1,1,0,1,0,1}
					
	};
	
	static final int PATHWAY_COLOR = 0; //white
	static final int WALL_COLOR = 1; //blue
	static final int BLOCKED_COLOR = 2; //red
	static final int PATH_COLOR = 3; // green 위치를 방문해봤으며 꽝인지 아닌지 모른다 
	
	public static void main(String[] args) {
		
		boolean result = findMazePath(0, 0);
		if(result) {
			System.out.println("find exit");
		}else {
			System.out.println("Not found");
		}

	}
	
	public static boolean findMazePath(int x, int y) {

		if (x < 0 || y < 0 || x >= N || y >= N)
			return false; // 미로의 범위 바깥

		else if (maze[x][y] != PATHWAY_COLOR) // 이미 방문햇거나 벽인경우 
			return false;
		else if (x == N - 1 && y == N - 1) {
			maze[x][y] = PATH_COLOR;
			return true;
		} else {
			maze[x][y] = PATH_COLOR;
			// 인접한 4개의 좌표 
			// 북 동 남 서 
			if (findMazePath(x - 1, y) || findMazePath(x, y + 1) || findMazePath(x + 1, y) || findMazePath(x, y - 1)) {
				return true;
			}
			maze[x][y] = BLOCKED_COLOR; // dead end
			return false;

		}

	}

	
}
